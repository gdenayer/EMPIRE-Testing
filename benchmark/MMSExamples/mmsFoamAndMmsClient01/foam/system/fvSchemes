/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    //default         CrankNicholson 1.0;
    default		backward;
    //default Euler;
}

gradSchemes
{
    default         none;
    grad(p)         Gauss linear;
    grad(U)         Gauss linear;
}

divSchemes
{
  div(phi,U)      Gauss linear;//
  //div(phi,U)      Gauss vanLeerV;//
  //div(phi,U)      Gauss GammaV 0.2;//

  //div((nuEff*dev(grad(U).T()))) Gauss linear;
  div((nuEff*dev(T(grad(U))))) Gauss linear;
  /*
    default         none;
    div(phi,U)      Gauss limitedLinearV 1;
    div(phi,k)      Gauss limitedLinear 1;
    div(phi,epsilon) Gauss limitedLinear 1;
    div(phi,R)      Gauss limitedLinear 1;
    div(phi,omega)  Gauss limitedLinear 1;
    div(R)          Gauss linear;
    div(phi,nuTilda) Gauss limitedLinear 1;
    */
}

laplacianSchemes
{
    default         Gauss linear uncorrected;
    /*
    laplacian(nuEff,U) Gauss linear corrected;
    laplacian((1|A(U)),p) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear corrected;
    laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    laplacian(DREff,R) Gauss linear corrected;
    laplacian(DnuTildaEff,nuTilda) Gauss linear corrected;
    laplacian(1,p) Gauss linear corrected;
    laplacian(DomegaEff,omega) Gauss linear corrected;
    laplacian(diffusivity,cellMotionU) Gauss linear corrected;
    laplacian(rUA,pcorr) Gauss linear corrected;*/
}

interpolationSchemes
{
    default         linear;
    //interpolate(U)  linear;
    //interpolate(HbyA) linear;
}

snGradSchemes
{
    default         uncorrected;//corrected;
}

fluxRequired
{
    default         yes;
    p               ;
}


// ************************************************************************* //
