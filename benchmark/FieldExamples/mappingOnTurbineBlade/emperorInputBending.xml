<?xml version="1.0" encoding="UTF-8"?>
<!-- EMPIRE input file -->
<EMPEROR xmlns="http://www.example.org/emperorInput" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.example.org/emperorInput ../../../xmlSchema/emperorInput.xsd">
	<!-- ================ define clientCodes ======================================== -->
	<clientCode name="meshClientTurbomachinery">
		<mesh name="myMesh1">
			<dataField name="displacements" location="atNode"
				dimension="vector" typeOfQuantity="field" />
			<dataField name="forces" location="atNode" dimension="vector"
				typeOfQuantity="fieldIntegral" />
		</mesh>
	</clientCode>
	<clientCode name="meshClientB">
		<mesh name="myMesh1">
			<dataField name="displacements" location="atNode"
				dimension="vector" typeOfQuantity="field" />
			<dataField name="tractionsElem" location="atElemCentroid"
				dimension="vector" typeOfQuantity="field" />
			<dataField name="tractionsNode" location="atNode"
				dimension="vector" typeOfQuantity="field" />
		</mesh>
	</clientCode>
	<!-- ================ define dataOutputs ======================================== -->
	<dataOutput name="output1" interval="1">
		<dataFieldRef clientCodeName="meshClientTurbomachinery"
			meshName="myMesh1" dataFieldName="displacements" />
		<dataFieldRef clientCodeName="meshClientTurbomachinery"
			meshName="myMesh1" dataFieldName="forces" />
		<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
			dataFieldName="displacements" />
		<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
			dataFieldName="tractionsElem" />
		<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
			dataFieldName="tractionsNode" />
	</dataOutput>
	<!-- ================ define mappers ============================================ -->
	<mapper name="mortar1" type="mortarMapper">
		<!-- mapping displacements from meshA to meshB, mapping forces from meshB 
			to meshA. -->
		<meshA>
			<meshRef clientCodeName="meshClientTurbomachinery" meshName="myMesh1" />
		</meshA>
		<meshB>
			<meshRef clientCodeName="meshClientB" meshName="myMesh1" />
		</meshB>
		<mortarMapper oppositeSurfaceNormal="false" dual="true"
			enforceConsistency="false" />
	</mapper>
	<!-- ================ define couplingAlgorithms ================================= -->
	<!-- ================ define extrapolators ================================= -->
	<!-- ================ define connections ======================================== -->
	<connection name="transfer displacements">
		<input>
			<dataFieldRef clientCodeName="meshClientTurbomachinery"
				meshName="myMesh1" dataFieldName="displacements" />
		</input>
		<output>
			<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
				dataFieldName="displacements" />
		</output>
		<sequence>
			<filter type="mappingFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientTurbomachinery"
						meshName="myMesh1" dataFieldName="displacements" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
						dataFieldName="displacements" />
				</output>
				<mappingFilter>
					<mapperRef mapperName="mortar1" />
				</mappingFilter>
			</filter>
		</sequence>
	</connection>
	<connection name="transfer forces">
		<input>
			<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
				dataFieldName="tractionsElem" />
		</input>
		<output>
			<dataFieldRef clientCodeName="meshClientTurbomachinery"
				meshName="myMesh1" dataFieldName="forces" />
		</output>
		<sequence>
			<filter type="locationFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
						dataFieldName="tractionsElem" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
						dataFieldName="tractionsNode" />
				</output>
			</filter>
			<filter type="mappingFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh1"
						dataFieldName="tractionsNode" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientTurbomachinery"
						meshName="myMesh1" dataFieldName="forces" />
				</output>
				<mappingFilter>
					<mapperRef mapperName="mortar1" />
				</mappingFilter>
			</filter>
		</sequence>
	</connection>
	<!-- ================ define coSimulation process ================================ -->
	<coSimulation>
		<sequence>
			<couplingLogic type="timeStepLoop">
				<timeStepLoop numTimeSteps="10">
					<dataOutputRef dataOutputName="output1" />
				</timeStepLoop>
				<sequence>
					<couplingLogic type="connection">
						<connectionRef connectionName="transfer displacements" />
					</couplingLogic>
					<couplingLogic type="connection">
						<connectionRef connectionName="transfer forces" />
					</couplingLogic>
				</sequence>
			</couplingLogic>
		</sequence>
	</coSimulation>
	<!-- ================ general block ============================================== -->
	<general>
		<portFile>server.port</portFile>
		<verbosity>a</verbosity>
	</general>
</EMPEROR>